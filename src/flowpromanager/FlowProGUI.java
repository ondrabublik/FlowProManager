/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package flowpromanager;

import flowpro.core.FlowProMain;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PrintStream;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.filechooser.FileSystemView;

/**
 *
 * @author obublik
 */
public class FlowProGUI extends javax.swing.JFrame {

    FlowProManager fpm;
    String[] listOfSimulations;

    /**
     * Creates new form FlowProGUI
     */
    public FlowProGUI() {
        fpm = new FlowProManager();
        initComponents();
        //redirectSystemStreams();

        setSimulationInfo();
        setMeshList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jTabbedPanelFlowProGUI = new javax.swing.JTabbedPane();
        jPanelSimulation = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jScrollPaneMeshList = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jMeshName = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSimulName = new javax.swing.JLabel();
        jButtonSelectSimul = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPaneSimulList = new javax.swing.JList();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jVerticesNumber = new javax.swing.JLabel();
        jElementsNumber = new javax.swing.JLabel();
        jButtonImportMesh = new javax.swing.JButton();
        jPanelParameter = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextAreaParameters = new javax.swing.JTextArea();
        jButtonSaveParameters = new javax.swing.JButton();
        jPanelRun = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextAreaConsole = new javax.swing.JTextArea();
        jButtonRun = new javax.swing.JButton();
        jPanelShowResult = new javax.swing.JPanel();
        jPanelManagePackage = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPanelFlowProGUI.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPanelFlowProGUIStateChanged(evt);
            }
        });

        jScrollPaneMeshList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jScrollPaneMeshListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jScrollPaneMeshList);

        jLabel1.setText("Problem:");

        jLabel3.setText("Simulation:");

        jButtonSelectSimul.setText("select");
        jButtonSelectSimul.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonSelectSimulMouseClicked(evt);
            }
        });

        jScrollPane2.setViewportView(jScrollPaneSimulList);

        jButton1.setText("delete");

        jButton2.setText("new");

        jLabel2.setText("Number of vertices:");

        jLabel4.setText("Number of elements:");

        jButtonImportMesh.setText("import");
        jButtonImportMesh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonImportMeshMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanelSimulationLayout = new javax.swing.GroupLayout(jPanelSimulation);
        jPanelSimulation.setLayout(jPanelSimulationLayout);
        jPanelSimulationLayout.setHorizontalGroup(
            jPanelSimulationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSimulationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelSimulationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelSimulationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelSimulationLayout.createSequentialGroup()
                        .addGroup(jPanelSimulationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonSelectSimul, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                            .addComponent(jButtonImportMesh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                        .addGroup(jPanelSimulationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelSimulationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jVerticesNumber, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jElementsNumber, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelSimulationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jMeshName, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jSimulName, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addGroup(jPanelSimulationLayout.createSequentialGroup()
                        .addGroup(jPanelSimulationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanelSimulationLayout.setVerticalGroup(
            jPanelSimulationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSimulationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelSimulationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelSimulationLayout.createSequentialGroup()
                        .addGroup(jPanelSimulationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelSimulationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanelSimulationLayout.createSequentialGroup()
                                    .addComponent(jMeshName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jSimulName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanelSimulationLayout.createSequentialGroup()
                                    .addComponent(jButtonSelectSimul)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButtonImportMesh)))
                            .addGroup(jPanelSimulationLayout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelSimulationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                            .addComponent(jVerticesNumber, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelSimulationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jElementsNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(jPanelSimulationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelSimulationLayout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jTabbedPanelFlowProGUI.addTab("simulation", jPanelSimulation);

        jPanelParameter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanelParameterMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanelParameterMouseEntered(evt);
            }
        });

        jTextAreaParameters.setColumns(20);
        jTextAreaParameters.setRows(5);
        jScrollPane3.setViewportView(jTextAreaParameters);

        jButtonSaveParameters.setText("save");
        jButtonSaveParameters.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonSaveParametersMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanelParameterLayout = new javax.swing.GroupLayout(jPanelParameter);
        jPanelParameter.setLayout(jPanelParameterLayout);
        jPanelParameterLayout.setHorizontalGroup(
            jPanelParameterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelParameterLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 778, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonSaveParameters, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelParameterLayout.setVerticalGroup(
            jPanelParameterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelParameterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelParameterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelParameterLayout.createSequentialGroup()
                        .addComponent(jButtonSaveParameters)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 502, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPanelFlowProGUI.addTab("parameters", jPanelParameter);

        jTextAreaConsole.setEditable(false);
        jTextAreaConsole.setColumns(20);
        jTextAreaConsole.setRows(5);
        jScrollPane4.setViewportView(jTextAreaConsole);

        jButtonRun.setText("run");
        jButtonRun.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonRunMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanelRunLayout = new javax.swing.GroupLayout(jPanelRun);
        jPanelRun.setLayout(jPanelRunLayout);
        jPanelRunLayout.setHorizontalGroup(
            jPanelRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRunLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 728, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonRun, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanelRunLayout.setVerticalGroup(
            jPanelRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRunLayout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(jPanelRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelRunLayout.createSequentialGroup()
                        .addComponent(jButtonRun, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 448, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPanelFlowProGUI.addTab("run", jPanelRun);

        javax.swing.GroupLayout jPanelShowResultLayout = new javax.swing.GroupLayout(jPanelShowResult);
        jPanelShowResult.setLayout(jPanelShowResultLayout);
        jPanelShowResultLayout.setHorizontalGroup(
            jPanelShowResultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 874, Short.MAX_VALUE)
        );
        jPanelShowResultLayout.setVerticalGroup(
            jPanelShowResultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 524, Short.MAX_VALUE)
        );

        jTabbedPanelFlowProGUI.addTab("show results", jPanelShowResult);

        javax.swing.GroupLayout jPanelManagePackageLayout = new javax.swing.GroupLayout(jPanelManagePackage);
        jPanelManagePackage.setLayout(jPanelManagePackageLayout);
        jPanelManagePackageLayout.setHorizontalGroup(
            jPanelManagePackageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 874, Short.MAX_VALUE)
        );
        jPanelManagePackageLayout.setVerticalGroup(
            jPanelManagePackageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 524, Short.MAX_VALUE)
        );

        jTabbedPanelFlowProGUI.addTab("manage packages", jPanelManagePackage);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPanelFlowProGUI)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPanelFlowProGUI)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTabbedPanelFlowProGUIStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPanelFlowProGUIStateChanged
        // TODO add your handling code here:
        switch (jTabbedPanelFlowProGUI.getSelectedIndex()) {
            case 1:
                File file = new File(fpm.simulSetup.simulationPath + "parameters.txt");
                jTextAreaParameters.setText(null);
                if (file.exists()) {
                    String line;
                    try (BufferedReader reader = new BufferedReader(new FileReader(file))) {
                        while ((line = reader.readLine()) != null) {
                            if (!line.startsWith(">")) {
                                jTextAreaParameters.append(line + "\n");
                            }
                        }
                    } catch (Exception e) {

                    }
                    jTextAreaParameters.setCaretPosition(0);
                }
                break;
        }
    }//GEN-LAST:event_jTabbedPanelFlowProGUIStateChanged

    private void jPanelParameterMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelParameterMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanelParameterMouseEntered

    private void jPanelParameterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelParameterMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanelParameterMouseClicked

    private void jButtonSaveParametersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonSaveParametersMouseClicked
        // TODO add your handling code here:
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(fpm.simulSetup.simulationPath + "parameters.txt"))) {
            jTextAreaParameters.write(writer);
            writer.close();
        } catch (Exception ex) {

        }
    }//GEN-LAST:event_jButtonSaveParametersMouseClicked

    private void jButtonSelectSimulMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonSelectSimulMouseClicked
        // TODO add your handling code here:
        int meshIndex = jScrollPaneMeshList.getSelectedIndex();
        int simulIndex = jScrollPaneSimulList.getSelectedIndex();
        if (meshIndex > -1) {
            if (simulIndex > -1) {
                fpm.setArgs((String) jScrollPaneMeshList.getSelectedValue(), (String) jScrollPaneSimulList.getSelectedValue());
                //setMeshList();
                setSimulationInfo();
            }
        }
    }//GEN-LAST:event_jButtonSelectSimulMouseClicked

    private void jScrollPaneMeshListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jScrollPaneMeshListValueChanged
        // TODO add your handling code here:
        if (jScrollPaneMeshList.getSelectedIndex() > -1) {
            setSimulationList((String) jScrollPaneMeshList.getSelectedValue());
        }
    }//GEN-LAST:event_jScrollPaneMeshListValueChanged

    private void jButtonRunMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonRunMouseClicked
        // TODO add your handling code here:
        try {
            FlowProMain.main(new String[]{"local"});
        } catch (Exception e) {

        }
//        runProcess("java -d64 -Xmx8g -jar FlowPro.jar local");
    }//GEN-LAST:event_jButtonRunMouseClicked

    private void jButtonImportMeshMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonImportMeshMouseClicked
        // TODO add your handling code here:
        JFileChooser jfc = new JFileChooser(System.getProperty("user.dir"));
        jfc.setDialogTitle("Choose mesh file: ");
        jfc.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        jfc.removeChoosableFileFilter(jfc.getAcceptAllFileFilter());
        jfc.setFileFilter(new FileNameExtensionFilter("Gmsh files .msh", "msh"));

        int returnValue = jfc.showOpenDialog(null);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            if (jfc.getSelectedFile().isFile()) {
                String geomName = JOptionPane.showInputDialog("Insert new geometry name");
                File file = new File("simulations/" + geomName);
                if(file.exists()){
                    //JOptionPane.showMessageDialog(null, "The name alllready exists. Owerride?");
                    int conf = JOptionPane.showConfirmDialog(null, "The name alllready exists. Owerride?");
                    if(conf > 0){
                        return;
                    }
                } else{
                   file.mkdir(); 
                }
                fpm.importMesh("simulations/" + geomName, jfc.getSelectedFile().getPath());
            }
        }
    }//GEN-LAST:event_jButtonImportMeshMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButtonImportMesh;
    private javax.swing.JButton jButtonRun;
    private javax.swing.JButton jButtonSaveParameters;
    private javax.swing.JButton jButtonSelectSimul;
    private javax.swing.JLabel jElementsNumber;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jMeshName;
    private javax.swing.JPanel jPanelManagePackage;
    private javax.swing.JPanel jPanelParameter;
    private javax.swing.JPanel jPanelRun;
    private javax.swing.JPanel jPanelShowResult;
    private javax.swing.JPanel jPanelSimulation;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JList jScrollPaneMeshList;
    private javax.swing.JList jScrollPaneSimulList;
    private javax.swing.JLabel jSimulName;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPanelFlowProGUI;
    private javax.swing.JTextArea jTextAreaConsole;
    private javax.swing.JTextArea jTextAreaParameters;
    private javax.swing.JLabel jVerticesNumber;
    // End of variables declaration//GEN-END:variables

    void setSimulationInfo() {
        fpm.simulSetup.refreshSimulationPath();
        jMeshName.setText(fpm.simulSetup.getMeshName());
        jSimulName.setText(fpm.simulSetup.getSimulationName());
        jVerticesNumber.setText(Integer.toString(fpm.simulSetup.nVertices));
        jElementsNumber.setText(fpm.simulSetup.nElementsPrint);
    }

    void setMeshList() {
        listOfSimulations = fpm.getListOfSimulation();
        int nSimulation = 0;
        String pom = "";
        for (int i = 0; i < listOfSimulations.length; i++) {
            String[] tokens = listOfSimulations[i].split("&");
            if (!tokens[0].equals(pom)) {
                nSimulation++;
            }
            pom = tokens[0];
        }

        String[] niceList = new String[nSimulation];
        pom = "";
        int s = 0;
        for (int i = 0; i < listOfSimulations.length; i++) {
            String[] tokens = listOfSimulations[i].split("&");

            if (i == 0) {
                niceList[s] = tokens[0];
            } else {
                if (!tokens[0].equals(pom)) {
                    niceList[s] = tokens[0];
                    s++;
                }
            }
            pom = tokens[0];
        }
        jScrollPaneMeshList.setListData(niceList);
    }

    void setSimulationList(String meshName) {
        listOfSimulations = fpm.getListOfSimulation();
        int nSimulation = 0;
        for (int i = 0; i < listOfSimulations.length; i++) {
            String[] tokens = listOfSimulations[i].split("&");
            if (tokens[0].equals(meshName)) {
                nSimulation++;
            }
        }
        String[] niceList = new String[nSimulation];
        int s = 0;
        for (int i = 0; i < listOfSimulations.length; i++) {
            String[] tokens = listOfSimulations[i].split("&");
            if (tokens[0].equals(meshName)) {
                niceList[s] = tokens[1];
                s++;
            }
        }
        jScrollPaneSimulList.setListData(niceList);
        jScrollPaneSimulList.setSelectedIndex(0);
    }

    //The following codes set where the text get redirected. In this case, jTextArea1    
    private void updateTextAreaConsole(final String text) {
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                jTextAreaConsole.append(text);
            }
        });
    }

    //Followings are The Methods that do the Redirect, you can simply Ignore them. 
    public void redirectSystemStreams() {
        OutputStream out = new OutputStream() {
            @Override
            public void write(int b) throws IOException {
                updateTextAreaConsole(String.valueOf((char) b));
            }

            @Override
            public void write(byte[] b, int off, int len) throws IOException {
                updateTextAreaConsole(new String(b, off, len));
            }

            @Override
            public void write(byte[] b) throws IOException {
                write(b, 0, b.length);
            }
        };

        System.setOut(new PrintStream(out, true));
        System.setErr(new PrintStream(out, true));
    }

    private void runProcess(String command) {
        try {
            Process pro = Runtime.getRuntime().exec(command);
            pro.waitFor();
            System.out.println(command + " exitValue() " + pro.exitValue());
        } catch (InterruptedException ex) {
            System.err.println(ex);
        } catch (IOException ex) {

        }
    }
}
