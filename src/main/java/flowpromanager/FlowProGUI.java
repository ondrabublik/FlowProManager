/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package flowpromanager;

import flowpro.api.FlowProProperties;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.InputStreamReader;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
//import fetcher.*;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PrintStream;

/**
 *
 * @author obublik
 */
public class FlowProGUI extends javax.swing.JFrame {

    FlowProManager fpm;
    String[] listOfSimulations;
    String command;

    Process pr;

    /**
     * Creates new form FlowProGUI
     */
    public FlowProGUI() {
        fpm = new FlowProManager();
        initComponents();
        this.setTitle("FlowPro");
        jListMemory.setSelectedIndex(1);
        //redirectSystemStreams();

        setSimulationInfo();
        setProblemList();
        setRunPane();

        // redirecting System.out.println to console
        PrintStream out = new PrintStream(new OutputStream() {
            @Override
            public void write(int b) throws IOException {
                jTextAreaOutput.append("" + (char) (b & 0xFF));
                jTextAreaOutput.setCaretPosition(jTextAreaOutput.getDocument().getLength());
            }
        });
        System.setOut(out);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPanelFlowProGUI = new javax.swing.JTabbedPane();
        jPanelSimulation = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jScrollPaneMeshList = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jMeshName = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSimulName = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPaneSimulList = new javax.swing.JList();
        jButtonDeleteSim = new javax.swing.JButton();
        jButtonNewSim = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jVerticesNumber = new javax.swing.JLabel();
        jElementsNumber = new javax.swing.JLabel();
        jButtonImportMesh = new javax.swing.JButton();
        jButtonDeleteProblem = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jDate = new javax.swing.JLabel();
        jSteps = new javax.swing.JLabel();
        jPanelParameter = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextAreaParameters = new javax.swing.JTextArea();
        jButtonSaveParameters = new javax.swing.JButton();
        jButtonCreateParamFile = new javax.swing.JButton();
        jPanelRun = new javax.swing.JPanel();
        jButtonRun = new javax.swing.JButton();
        jRadioButton64bit = new javax.swing.JRadioButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jListMemory = new javax.swing.JList();
        jLabel7 = new javax.swing.JLabel();
        jRadioButtonIsParallel = new javax.swing.JRadioButton();
        jLabelCommandRun = new javax.swing.JLabel();
        jButtonBreakComputation = new javax.swing.JButton();
        jButtonCheckPC = new javax.swing.JButton();
        jLabelPCNumber = new javax.swing.JLabel();
        jTextFieldNumberOfPC = new javax.swing.JTextField();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTextAreaPCWorkersList = new javax.swing.JTextArea();
        jLabelAvilableWorkers = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTextAreaNetworkParameters = new javax.swing.JTextArea();
        jLabelNetworkParameters = new javax.swing.JLabel();
        jButtonSaveNetworkParameters = new javax.swing.JButton();
        jPanelShowResult = new javax.swing.JPanel();
        jButtonExport = new javax.swing.JButton();
        jLabelExportCommand = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jListResults = new javax.swing.JList();
        jLabel8 = new javax.swing.JLabel();
        jRadioButtonToVTK = new javax.swing.JRadioButton();
        jLabel9 = new javax.swing.JLabel();
        jTextFieldItteration = new javax.swing.JTextField();
        jTextFieldAddToCommandResults = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jButtonOpenParaview = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextAreaOutput = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPanelFlowProGUI.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPanelFlowProGUIStateChanged(evt);
            }
        });

        jScrollPaneMeshList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPaneMeshListMouseClicked(evt);
            }
        });
        jScrollPaneMeshList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jScrollPaneMeshListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jScrollPaneMeshList);

        jLabel1.setText("Problem:");

        jLabel3.setText("Simulation:");

        jScrollPaneSimulList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPaneSimulListMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jScrollPaneSimulList);

        jButtonDeleteSim.setText("delete");
        jButtonDeleteSim.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonDeleteSimMouseClicked(evt);
            }
        });

        jButtonNewSim.setText("new");
        jButtonNewSim.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonNewSimMouseClicked(evt);
            }
        });

        jLabel2.setText("Number of vertices:");

        jLabel4.setText("Number of elements:");

        jButtonImportMesh.setText("import");
        jButtonImportMesh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonImportMeshMouseClicked(evt);
            }
        });

        jButtonDeleteProblem.setText("delete");
        jButtonDeleteProblem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonDeleteProblemMouseClicked(evt);
            }
        });

        jLabel5.setText("Date:");

        jLabel6.setText("Iterations done:");

        javax.swing.GroupLayout jPanelSimulationLayout = new javax.swing.GroupLayout(jPanelSimulation);
        jPanelSimulation.setLayout(jPanelSimulationLayout);
        jPanelSimulationLayout.setHorizontalGroup(
            jPanelSimulationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSimulationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelSimulationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelSimulationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelSimulationLayout.createSequentialGroup()
                        .addGroup(jPanelSimulationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonNewSim, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonDeleteSim, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelSimulationLayout.createSequentialGroup()
                        .addGroup(jPanelSimulationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonImportMesh, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                            .addComponent(jButtonDeleteProblem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                        .addGroup(jPanelSimulationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelSimulationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSteps, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)
                            .addComponent(jVerticesNumber, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)
                            .addComponent(jElementsNumber, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)
                            .addComponent(jMeshName, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)
                            .addComponent(jSimulName, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)
                            .addComponent(jDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        jPanelSimulationLayout.setVerticalGroup(
            jPanelSimulationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSimulationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelSimulationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelSimulationLayout.createSequentialGroup()
                        .addGroup(jPanelSimulationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelSimulationLayout.createSequentialGroup()
                                .addComponent(jMeshName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSimulName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelSimulationLayout.createSequentialGroup()
                                .addGroup(jPanelSimulationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButtonImportMesh))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelSimulationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButtonDeleteProblem, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelSimulationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jVerticesNumber, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelSimulationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jElementsNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelSimulationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelSimulationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                            .addComponent(jSteps, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelSimulationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelSimulationLayout.createSequentialGroup()
                        .addComponent(jButtonNewSim)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonDeleteSim))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPanelFlowProGUI.addTab("simulation", jPanelSimulation);

        jPanelParameter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanelParameterMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanelParameterMouseEntered(evt);
            }
        });

        jTextAreaParameters.setColumns(20);
        jTextAreaParameters.setRows(5);
        jScrollPane3.setViewportView(jTextAreaParameters);

        jButtonSaveParameters.setText("save");
        jButtonSaveParameters.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonSaveParametersMouseClicked(evt);
            }
        });

        jButtonCreateParamFile.setText("create");
        jButtonCreateParamFile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonCreateParamFileMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanelParameterLayout = new javax.swing.GroupLayout(jPanelParameter);
        jPanelParameter.setLayout(jPanelParameterLayout);
        jPanelParameterLayout.setHorizontalGroup(
            jPanelParameterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelParameterLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 731, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanelParameterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonSaveParameters, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                    .addComponent(jButtonCreateParamFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelParameterLayout.setVerticalGroup(
            jPanelParameterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelParameterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelParameterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelParameterLayout.createSequentialGroup()
                        .addComponent(jButtonCreateParamFile)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonSaveParameters)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPanelFlowProGUI.addTab("parameters", jPanelParameter);

        jButtonRun.setText("run");
        jButtonRun.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonRunMouseClicked(evt);
            }
        });

        jRadioButton64bit.setText("64 bit system");

        jListMemory.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "2", "4", "8", "16", "32" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane4.setViewportView(jListMemory);

        jLabel7.setText("Memory [Gb]:");

        jRadioButtonIsParallel.setText("distributed");
        jRadioButtonIsParallel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButtonIsParallelMouseClicked(evt);
            }
        });

        jButtonBreakComputation.setText("break");
        jButtonBreakComputation.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonBreakComputationMouseClicked(evt);
            }
        });

        jButtonCheckPC.setText("check");
        jButtonCheckPC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonCheckPCMouseClicked(evt);
            }
        });

        jLabelPCNumber.setText("number of PC:");

        jTextFieldNumberOfPC.setText("1");

        jTextAreaPCWorkersList.setColumns(20);
        jTextAreaPCWorkersList.setRows(5);
        jScrollPane7.setViewportView(jTextAreaPCWorkersList);

        jLabelAvilableWorkers.setText("Available workers:");

        jTextAreaNetworkParameters.setColumns(20);
        jTextAreaNetworkParameters.setRows(5);
        jScrollPane8.setViewportView(jTextAreaNetworkParameters);

        jLabelNetworkParameters.setText("Parameters:");

        jButtonSaveNetworkParameters.setText("save");
        jButtonSaveNetworkParameters.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonSaveNetworkParametersMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanelRunLayout = new javax.swing.GroupLayout(jPanelRun);
        jPanelRun.setLayout(jPanelRunLayout);
        jPanelRunLayout.setHorizontalGroup(
            jPanelRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRunLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelRunLayout.createSequentialGroup()
                        .addGroup(jPanelRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jRadioButton64bit)
                            .addGroup(jPanelRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane4)
                                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)))
                        .addGap(51, 51, 51)
                        .addGroup(jPanelRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelRunLayout.createSequentialGroup()
                                .addGroup(jPanelRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jRadioButtonIsParallel, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                                    .addComponent(jLabelPCNumber, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldNumberOfPC, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabelNetworkParameters, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelRunLayout.createSequentialGroup()
                                    .addComponent(jLabelAvilableWorkers, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButtonCheckPC, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanelRunLayout.createSequentialGroup()
                                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonSaveNetworkParameters, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanelRunLayout.createSequentialGroup()
                        .addComponent(jLabelCommandRun, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 223, Short.MAX_VALUE)
                        .addGroup(jPanelRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonRun, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                            .addComponent(jButtonBreakComputation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanelRunLayout.setVerticalGroup(
            jPanelRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRunLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanelRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonRun, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonIsParallel)
                    .addComponent(jRadioButton64bit))
                .addGroup(jPanelRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelRunLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jButtonBreakComputation, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelRunLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelPCNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldNumberOfPC, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelRunLayout.createSequentialGroup()
                                .addComponent(jLabelNetworkParameters, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                                    .addGroup(jPanelRunLayout.createSequentialGroup()
                                        .addComponent(jButtonSaveNetworkParameters, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))))))
                .addGap(18, 18, 18)
                .addGroup(jPanelRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelAvilableWorkers, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCheckPC))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelCommandRun, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPanelFlowProGUI.addTab("run", jPanelRun);

        jButtonExport.setText("export");
        jButtonExport.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonExportMouseClicked(evt);
            }
        });

        jScrollPane5.setViewportView(jListResults);

        jLabel8.setText("Select results:");

        jRadioButtonToVTK.setSelected(true);
        jRadioButtonToVTK.setText("VTK format");

        jLabel9.setText("iteration:");

        jLabel10.setText("Add to command:");

        jButtonOpenParaview.setText("paraview");
        jButtonOpenParaview.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonOpenParaviewMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanelShowResultLayout = new javax.swing.GroupLayout(jPanelShowResult);
        jPanelShowResult.setLayout(jPanelShowResultLayout);
        jPanelShowResultLayout.setHorizontalGroup(
            jPanelShowResultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelShowResultLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelShowResultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelShowResultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanelShowResultLayout.createSequentialGroup()
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(32, 32, 32)
                            .addComponent(jRadioButtonToVTK, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldAddToCommandResults, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelExportCommand, javax.swing.GroupLayout.PREFERRED_SIZE, 649, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelShowResultLayout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(126, 126, 126)
                        .addComponent(jTextFieldItteration, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                .addGroup(jPanelShowResultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonExport, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                    .addComponent(jButtonOpenParaview, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelShowResultLayout.setVerticalGroup(
            jPanelShowResultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelShowResultLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanelShowResultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelShowResultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonExport, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jRadioButtonToVTK))
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(jPanelShowResultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelShowResultLayout.createSequentialGroup()
                        .addComponent(jTextFieldItteration, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(jButtonOpenParaview, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldAddToCommandResults, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 87, Short.MAX_VALUE)
                .addComponent(jLabelExportCommand, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPanelFlowProGUI.addTab("export results", jPanelShowResult);

        jTextAreaOutput.setEditable(false);
        jTextAreaOutput.setColumns(20);
        jTextAreaOutput.setRows(5);
        jTextAreaOutput.setAutoscrolls(false);
        jTextAreaOutput.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane6.setViewportView(jTextAreaOutput);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTabbedPanelFlowProGUI)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane6)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPanelFlowProGUI, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTabbedPanelFlowProGUIStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPanelFlowProGUIStateChanged
        switch (jTabbedPanelFlowProGUI.getSelectedIndex()) {
            case 1: // load parameters.txt and display it
                File file = new File(fpm.simulSetup.simulationPath + "parameters.txt");
                jTextAreaParameters.setText(null);
                if (file.exists()) {
                    String line;
                    try (BufferedReader reader = new BufferedReader(new FileReader(file))) {
                        while ((line = reader.readLine()) != null) {
                            if (!line.startsWith(">")) {
                                jTextAreaParameters.append(line + "\n");
                            }
                        }
                    } catch (Exception e) {
                        print(e.toString());
                    }
                    jTextAreaParameters.setCaretPosition(0);
                }
                break;

            case 2: // load network parameters and display it
                File fileNet = new File("network/parameters.txt");
                jTextAreaNetworkParameters.setText(null);
                if (fileNet.exists()) {
                    String line;
                    try (BufferedReader reader = new BufferedReader(new FileReader(fileNet))) {
                        while ((line = reader.readLine()) != null) {
                            if (!line.startsWith(">")) {
                                jTextAreaNetworkParameters.append(line + "\n");
                            }
                        }
                    } catch (Exception e) {
                        print(e.toString());
                    }
                    jTextAreaNetworkParameters.setCaretPosition(0);
                }
                break;

            case 3: // load possible results and display it
                try {
                    FlowProProperties props = new FlowProProperties();
                    props.load(new FileInputStream(fpm.simulSetup.simulationPath + "parameters.txt"));
                    String[] resultsList = props.getStringArray("results");
                    jListResults.setListData(resultsList);
                } catch (Exception e) {
                    printClean("file " + fpm.simulSetup.simulationPath + "parameters.txt" + " not found");
                }
                break;
        }
    }//GEN-LAST:event_jTabbedPanelFlowProGUIStateChanged

    private void jPanelParameterMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelParameterMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanelParameterMouseEntered

    private void jPanelParameterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelParameterMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanelParameterMouseClicked

    private void jButtonSaveParametersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonSaveParametersMouseClicked
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(fpm.simulSetup.simulationPath + "parameters.txt"))) {
            jTextAreaParameters.write(writer);
            writer.close();
        } catch (Exception ex) {
            print(ex.toString());
        }
    }//GEN-LAST:event_jButtonSaveParametersMouseClicked

    private void jScrollPaneMeshListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jScrollPaneMeshListValueChanged
        if (jScrollPaneMeshList.getSelectedIndex() > -1) {
            setSimulationList((String) jScrollPaneMeshList.getSelectedValue());
        }
    }//GEN-LAST:event_jScrollPaneMeshListValueChanged

    private void jButtonRunMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonRunMouseClicked
        command = "java";
        if (jRadioButton64bit.isSelected()) {
            command += " -d64";
        }
        command += " -Xmx" + jListMemory.getSelectedValue() + "g";

        if (jRadioButtonIsParallel.isSelected()) { // paralell/local mode
            command += " -jar FlowPro.jar master " + jTextFieldNumberOfPC.getText();
        } else {
            command += " -jar FlowPro.jar master 0";
        }
        jLabelCommandRun.setText("java command: " + command);
        jTextAreaOutput.setText("");
        jTextAreaOutput.update(jTextAreaOutput.getGraphics());

        new Thread(new Runnable() {
            public void run() {
                try {
                    Runtime rt = Runtime.getRuntime();
                    pr = rt.exec(command);
                    BufferedReader input = new BufferedReader(new InputStreamReader(pr.getInputStream()));
                    String line = null;
                    while ((line = input.readLine()) != null) {
                        print(line);
                    }
                    int exitVal = pr.waitFor();
                    print("Exited with error code " + exitVal);
                } catch (Exception e) {
                    print(e.toString());
                }
            }
        }).start();

//        runProcess("java -d64 -Xmx8g -jar FlowPro.jar local");
    }//GEN-LAST:event_jButtonRunMouseClicked

    private void jButtonImportMeshMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonImportMeshMouseClicked
        JFileChooser jfc = new JFileChooser(System.getProperty("user.dir"));
        jfc.setDialogTitle("Choose mesh file: ");
        jfc.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        jfc.removeChoosableFileFilter(jfc.getAcceptAllFileFilter());
        jfc.setFileFilter(new FileNameExtensionFilter("Gmsh files .msh", "msh"));

        int returnValue = jfc.showOpenDialog(null);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            if (jfc.getSelectedFile().isFile()) {
                String geomName = JOptionPane.showInputDialog("Insert new geometry name");
                File file = new File("simulations/" + geomName);
                if (file.exists()) {
                    //JOptionPane.showMessageDialog(null, "The name alllready exists. Owerride?");
                    int conf = JOptionPane.showConfirmDialog(null, "The name alllready exists. Override?");
                    if (conf > 0) {
                        return;
                    }
                } else {
                    file.mkdir();
                }
                fpm.importMesh("simulations/" + geomName + "/", jfc.getSelectedFile().getPath());
                fpm.setArgs(geomName, "default");
            }
        }
        // refresh problem list
        setProblemList();
    }//GEN-LAST:event_jButtonImportMeshMouseClicked

    private void jButtonDeleteProblemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonDeleteProblemMouseClicked
        int conf = JOptionPane.showConfirmDialog(null, "Are you sure to delete " + fpm.simulSetup.geometryName + " ?");
        if (conf == 0) {
            File dir = new File(fpm.simulSetup.geometryPath);
            if (!deleteDirectory(dir)) {
                JOptionPane.showMessageDialog(null, "Folder " + fpm.simulSetup.geometryName + " could not be deleted!");
            }
        }
        // refresh problem list
        setProblemList();
    }//GEN-LAST:event_jButtonDeleteProblemMouseClicked

    private void jButtonNewSimMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonNewSimMouseClicked
        String simName = JOptionPane.showInputDialog("Insert new simulation name");
        File file = new File(fpm.simulSetup.geometryPath + simName);
        if (file.exists()) {
            int conf = JOptionPane.showConfirmDialog(null, "The simulation " + simName + " allready exists. Owerride?");
            if (conf > 0) {
                return;
            }
        } else {
            file.mkdir();
        }
        //fpm.setArgs(geomName, "default");

        // refresh problem list
        setSimulationList(fpm.simulSetup.geometryName);
    }//GEN-LAST:event_jButtonNewSimMouseClicked

    private void jScrollPaneMeshListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPaneMeshListMouseClicked
        int meshIndex = jScrollPaneMeshList.getSelectedIndex();
        int simulIndex = jScrollPaneSimulList.getSelectedIndex();
        if (meshIndex > -1) {
            if (simulIndex > -1) {
                fpm.setArgs((String) jScrollPaneMeshList.getSelectedValue(), (String) jScrollPaneSimulList.getSelectedValue());
                //setMeshList();
                setSimulationInfo();
            }
        }
    }//GEN-LAST:event_jScrollPaneMeshListMouseClicked

    private void jScrollPaneSimulListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPaneSimulListMouseClicked
        int meshIndex = jScrollPaneMeshList.getSelectedIndex();
        int simulIndex = jScrollPaneSimulList.getSelectedIndex();
        if (meshIndex > -1) {
            if (simulIndex > -1) {
                fpm.setArgs((String) jScrollPaneMeshList.getSelectedValue(), (String) jScrollPaneSimulList.getSelectedValue());
                //setMeshList();
                setSimulationInfo();
            }
        }
    }//GEN-LAST:event_jScrollPaneSimulListMouseClicked

    private void jButtonDeleteSimMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonDeleteSimMouseClicked
        int conf = JOptionPane.showConfirmDialog(null, "Are you sure to delete " + fpm.simulSetup.simulationName + " ?");
        if (conf == 0) {
            String simName = fpm.simulSetup.simulationName;
            File dir = new File(fpm.simulSetup.simulationPath);
            printClean(fpm.simulSetup.simulationPath);
            if (simName.equals("default")) {
                JOptionPane.showMessageDialog(null, "Empty default simulation was created.");
                if (simName.equals("default")) {
                    dir = new File(fpm.simulSetup.simulationPath + "default");
                    dir.mkdir();

                }
            } else if (!deleteDirectory(dir)) {
                JOptionPane.showMessageDialog(null, "Folder " + fpm.simulSetup.simulationName + " could not be deleted!");
            }
        }
        // refresh problem list
        setSimulationList(fpm.simulSetup.geometryName);
        setSimulationInfo();
    }//GEN-LAST:event_jButtonDeleteSimMouseClicked

    private void jButtonCreateParamFileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonCreateParamFileMouseClicked
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CreateParametersFile(fpm.simulSetup.simulationPath).setVisible(true);
            }
        });
    }//GEN-LAST:event_jButtonCreateParamFileMouseClicked

    private void jButtonExportMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonExportMouseClicked
        command = "java -jar FlowPro.jar postprocessing ";
        List values = jListResults.getSelectedValuesList();
        for (Object value : values) {
            command += (String) value + " ";
        }

        command += " " + jTextFieldAddToCommandResults.getText();

        if (jRadioButtonToVTK.isSelected()) {
            command += " -fvtk";
        }

        String iteration = jTextFieldItteration.getText();
        if (!iteration.equals("")) {
            command += " -i" + iteration;
        }

        jLabelExportCommand.setText("java command: " + command);
        printClean("");

        new Thread(new Runnable() {
            public void run() {
                try {
                    Runtime rt = Runtime.getRuntime();
                    Process pr = rt.exec(command);
                    BufferedReader input = new BufferedReader(new InputStreamReader(pr.getInputStream()));
                    String line = null;
                    while ((line = input.readLine()) != null) {
                        print(line);
                    }
                    int exitVal = pr.waitFor();
                    print("Exited with error code " + exitVal);
                } catch (Exception e) {
                    print(e.toString());
                }
            }
        }).start();
    }//GEN-LAST:event_jButtonExportMouseClicked

    private void jButtonOpenParaviewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonOpenParaviewMouseClicked
        new Thread(new Runnable() {
            public void run() {
                try {
                    Runtime rt = Runtime.getRuntime();
                    rt.exec("paraview " + fpm.simulSetup.simulationPath + "output/results.vtk");
                } catch (Exception e) {
                    print("Can not open paraview!");
                }
            }
        }).start();
    }//GEN-LAST:event_jButtonOpenParaviewMouseClicked

    private void jButtonBreakComputationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonBreakComputationMouseClicked
        try {
            pr.destroy();
        } catch (Exception e) {
            print(e.toString());
        }
    }//GEN-LAST:event_jButtonBreakComputationMouseClicked

    private void jButtonCheckPCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonCheckPCMouseClicked
        if (jRadioButtonIsParallel.isSelected()) {
            new Thread(new Runnable() {
                public void run() {
                    try {
//                        FetcherServer fetcher = new FetcherServer();
//                        fetcher.initChecker();
//                        fetcher.start();
//                        Thread.sleep(fetcher.getTimeOut() + 100);
//                        List<String> workerList = fetcher.getCheckedList();
//                        jTextAreaPCWorkersList.setText("");
//                        workerList.stream().forEach((worker) -> {
//                            jTextAreaPCWorkersList.append(worker + "\n");
//                        });
                    } catch (Exception e) {
                        print("Can not run fetcher!");
                    }
                }
            }).start();
        } else {
            print("Option 'distributed' must be checked for distributed computations!");
        }
    }//GEN-LAST:event_jButtonCheckPCMouseClicked

    private void jButtonSaveNetworkParametersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonSaveNetworkParametersMouseClicked
        try (BufferedWriter writer = new BufferedWriter(new FileWriter("network/parameters.txt"))) {
            jTextAreaParameters.write(writer);
            writer.close();
        } catch (Exception ex) {
            print(ex.toString());
        }
    }//GEN-LAST:event_jButtonSaveNetworkParametersMouseClicked

    private void jRadioButtonIsParallelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButtonIsParallelMouseClicked
        if (jRadioButtonIsParallel.isSelected()) {
            jLabelPCNumber.setVisible(true);
            jTextFieldNumberOfPC.setVisible(true);
            jLabelNetworkParameters.setVisible(true);
            jTextAreaNetworkParameters.setVisible(true);
            jButtonSaveNetworkParameters.setVisible(true);
            jLabelAvilableWorkers.setVisible(true);
            jButtonCheckPC.setVisible(true);
            jTextAreaPCWorkersList.setVisible(true);
        } else {
            jLabelPCNumber.setVisible(false);
            jTextFieldNumberOfPC.setVisible(false);
            jLabelNetworkParameters.setVisible(false);
            jTextAreaNetworkParameters.setVisible(false);
            jButtonSaveNetworkParameters.setVisible(false);
            jLabelAvilableWorkers.setVisible(false);
            jButtonCheckPC.setVisible(false);
            jTextAreaPCWorkersList.setVisible(false);
        }
    }//GEN-LAST:event_jRadioButtonIsParallelMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBreakComputation;
    private javax.swing.JButton jButtonCheckPC;
    private javax.swing.JButton jButtonCreateParamFile;
    private javax.swing.JButton jButtonDeleteProblem;
    private javax.swing.JButton jButtonDeleteSim;
    private javax.swing.JButton jButtonExport;
    private javax.swing.JButton jButtonImportMesh;
    private javax.swing.JButton jButtonNewSim;
    private javax.swing.JButton jButtonOpenParaview;
    private javax.swing.JButton jButtonRun;
    private javax.swing.JButton jButtonSaveNetworkParameters;
    private javax.swing.JButton jButtonSaveParameters;
    private javax.swing.JLabel jDate;
    private javax.swing.JLabel jElementsNumber;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelAvilableWorkers;
    private javax.swing.JLabel jLabelCommandRun;
    private javax.swing.JLabel jLabelExportCommand;
    private javax.swing.JLabel jLabelNetworkParameters;
    private javax.swing.JLabel jLabelPCNumber;
    private javax.swing.JList jListMemory;
    private javax.swing.JList jListResults;
    private javax.swing.JLabel jMeshName;
    private javax.swing.JPanel jPanelParameter;
    private javax.swing.JPanel jPanelRun;
    private javax.swing.JPanel jPanelShowResult;
    private javax.swing.JPanel jPanelSimulation;
    private javax.swing.JRadioButton jRadioButton64bit;
    private javax.swing.JRadioButton jRadioButtonIsParallel;
    private javax.swing.JRadioButton jRadioButtonToVTK;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JList jScrollPaneMeshList;
    private javax.swing.JList jScrollPaneSimulList;
    private javax.swing.JLabel jSimulName;
    private javax.swing.JLabel jSteps;
    private javax.swing.JTabbedPane jTabbedPanelFlowProGUI;
    private javax.swing.JTextArea jTextAreaNetworkParameters;
    private javax.swing.JTextArea jTextAreaOutput;
    private javax.swing.JTextArea jTextAreaPCWorkersList;
    private javax.swing.JTextArea jTextAreaParameters;
    private javax.swing.JTextField jTextFieldAddToCommandResults;
    private javax.swing.JTextField jTextFieldItteration;
    private javax.swing.JTextField jTextFieldNumberOfPC;
    private javax.swing.JLabel jVerticesNumber;
    // End of variables declaration//GEN-END:variables

    void setSimulationInfo() {
        fpm.simulSetup.refreshSimulationPath();
        jMeshName.setText(fpm.simulSetup.getMeshName());
        jSimulName.setText(fpm.simulSetup.getSimulationName());
        jVerticesNumber.setText(Integer.toString(fpm.simulSetup.nVertices));
        jElementsNumber.setText(fpm.simulSetup.nElementsPrint);
        jDate.setText(fpm.simulSetup.date);
        jSteps.setText(fpm.simulSetup.steps);
    }

    void setProblemList() {
        listOfSimulations = fpm.getListOfSimulation();
        int nSimulation = 0;
        String pom = "";
        for (int i = 0; i < listOfSimulations.length; i++) {
            String[] tokens = listOfSimulations[i].split("&");
            if (!tokens[0].equals(pom)) {
                nSimulation++;
            }
            pom = tokens[0];
        }

        String[] niceList = new String[nSimulation];
        pom = "";
        int s = 0;
        for (int i = 0; i < listOfSimulations.length; i++) {
            String[] tokens = listOfSimulations[i].split("&");

            if (i == 0) {
                niceList[s] = tokens[0];
            } else if (!tokens[0].equals(pom)) {
                niceList[s] = tokens[0];
                s++;
            }
            pom = tokens[0];
        }
        jScrollPaneMeshList.setListData(niceList);
    }

    void setSimulationList(String meshName) {
        listOfSimulations = fpm.getListOfSimulation();
        int nSimulation = 0;
        for (int i = 0; i < listOfSimulations.length; i++) {
            String[] tokens = listOfSimulations[i].split("&");
            if (tokens[0].equals(meshName)) {
                nSimulation++;
            }
        }
        String[] niceList = new String[nSimulation];
        int s = 0;
        for (int i = 0; i < listOfSimulations.length; i++) {
            String[] tokens = listOfSimulations[i].split("&");
            if (tokens[0].equals(meshName)) {
                niceList[s] = tokens[1];
                s++;
            }
        }
        jScrollPaneSimulList.setListData(niceList);
        jScrollPaneSimulList.setSelectedIndex(0);
    }

    void setRunPane() {
        jLabelPCNumber.setVisible(false);
        jTextFieldNumberOfPC.setVisible(false);
        jLabelNetworkParameters.setVisible(false);
        jTextAreaNetworkParameters.setVisible(false);
        jButtonSaveNetworkParameters.setVisible(false);
        jLabelAvilableWorkers.setVisible(false);
        jButtonCheckPC.setVisible(false);
        jTextAreaPCWorkersList.setVisible(false);
    }

    boolean deleteDirectory(File directoryToBeDeleted) {
        File[] allContents = directoryToBeDeleted.listFiles();
        if (allContents != null) {
            for (File file : allContents) {
                deleteDirectory(file);
            }
        }
        return directoryToBeDeleted.delete();
    }

    public void print(String line) {

        jTextAreaOutput.append(line + "\n");

        // scrolls the text area to the end of data
        jTextAreaOutput.setCaretPosition(jTextAreaOutput.getDocument().getLength());
    }

    public void printClean(String line) {

        jTextAreaOutput.setText("");
        jTextAreaOutput.append(line + "\n");

        // scrolls the text area to the end of data
        jTextAreaOutput.setCaretPosition(jTextAreaOutput.getDocument().getLength());
    }
}
